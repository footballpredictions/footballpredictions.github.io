// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function downloadApp() {
	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
	showDownloadNotification('–ò–¥–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏...');

	// –ï—Å–ª–∏ —É–∂–µ –∑–Ω–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ APK ‚Äî –∫–∞—á–∞–µ–º —Å—Ä–∞–∑—É
	if (window.__latestApkUrl) {
		triggerDirectDownload(window.__latestApkUrl);
		return;
	}

	// –ò–Ω–∞—á–µ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Å—ã–ª–∫—É –∏–∑ GitHub Releases
	fetchLatestApkUrl()
		.then((apkUrl) => {
			if (apkUrl) {
				triggerDirectDownload(apkUrl);
			} else {
				// –§–æ–ª–±—ç–∫ –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
				triggerDirectDownload('https://github.com/footballpredictions/footballpredictions.github.io/releases/download/v2.0.2/FootballPredictions-release.apk');
			}
		})
		.catch(() => {
			triggerDirectDownload('https://github.com/footballpredictions/footballpredictions.github.io/releases/download/v2.0.2/FootballPredictions-release.apk');
		});
}

function triggerDirectDownload(url) {
	showDownloadNotification('–ó–∞–≥—Ä—É–∑–∫–∞ APK –Ω–∞—á–Ω–µ—Ç—Å—è —Å–µ–π—á–∞—Å...');
	const downloadBtn = document.querySelector('.download-btn');
	if (downloadBtn) {
		downloadBtn.style.transform = 'scale(0.95)';
		setTimeout(() => { downloadBtn.style.transform = ''; }, 150);
	}
	// –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ñ–∞–π–ª APK
	window.location.href = url;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ–ª–∏–∑–∞ –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ APK
async function fetchLatestApkUrl() {
	try {
		const res = await fetch('https://api.github.com/repos/footballpredictions/FootballAdminData/releases/latest', {
			headers: { 'Accept': 'application/vnd.github+json' }
		});
		if (!res.ok) throw new Error('Failed to fetch latest release');
		const data = await res.json();
		// –ò—â–µ–º asset c —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .apk
		const apkAsset = Array.isArray(data.assets) ? data.assets.find(a => typeof a.browser_download_url === 'string' && a.browser_download_url.toLowerCase().endsWith('.apk')) : null;
		if (apkAsset && apkAsset.browser_download_url) {
			window.__latestApkUrl = apkAsset.browser_download_url;
			window.__latestVersionTag = data.tag_name || '';
			updateVersionLabel(window.__latestVersionTag);
			return window.__latestApkUrl;
		}
		return null;
	} catch (e) {
		return null;
	}
}

function updateVersionLabel(tag) {
	if (!tag) return;
	const el = document.querySelector('.version-info');
	if (el) {
		el.textContent = `–í–µ—Ä—Å–∏—è ${tag}`;
	}
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
function showDownloadNotification(text) {
	// –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
	const notification = document.createElement('div');
	notification.className = 'download-notification';
	notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-icon">üì±</span>
            <span class="notification-text">${text || '–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≥—Ä—É–∑–∫–∏...'}</span>
        </div>
    `;
	// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
	notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(45deg, #4CAF50, #45a049);
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        animation: slideInRight 0.5s ease-out;
        font-family: 'Roboto', sans-serif;
    `;
	// –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
	document.body.appendChild(notification);
	// –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
	setTimeout(() => {
		notification.style.animation = 'slideOutRight 0.5s ease-in';
		setTimeout(() => {
			if (notification.parentNode) {
				notification.parentNode.removeChild(notification);
			}
		}, 500);
	}, 3000);
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// (–£–¥–∞–ª–µ–Ω—ã –ª–µ—Ç–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã)
document.addEventListener('DOMContentLoaded', function() {
	// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø–æ–¥–≥—Ä—É–∑–∏–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑–∞—Ç—å –µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	fetchLatestApkUrl();
	// –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –æ—Å—Ç–∞—ë—Ç—Å—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
	addSoundEffects();
});

// –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
function addSoundEffects() {
	// –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
	let audioContext;
	function playClickSound() {
		if (!audioContext) {
			audioContext = new (window.AudioContext || window.webkitAudioContext)();
		}
		const oscillator = audioContext.createOscillator();
		const gainNode = audioContext.createGain();
		oscillator.connect(gainNode);
		gainNode.connect(audioContext.destination);
		oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
		oscillator.frequency.exponentialRampToValueAtTime(400, audioContext.currentTime + 0.1);
		gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
		gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);
		oscillator.start(audioContext.currentTime);
		oscillator.stop(audioContext.currentTime + 0.1);
	}
	const downloadBtn = document.querySelector('.download-btn');
	if (downloadBtn) downloadBtn.addEventListener('click', playClickSound);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
	console.log('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', e.message);
});

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞ –º—è—á–µ –¥–ª—è –ª—É—á—à–µ–≥–æ UX
document.addEventListener('contextmenu', function(e) {
	if (e.target.closest('.football-ball')) {
		e.preventDefault();
	}
});

// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
document.addEventListener('keydown', function(e) {
	if (e.key === 'Enter' || e.key === ' ') {
		const downloadBtn = document.querySelector('.download-btn');
		if (document.activeElement === downloadBtn) {
			downloadApp();
		}
	}
});

// –ü–∞—Ä–∞–ª–ª–∞–∫—Å –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
window.addEventListener('scroll', function() {
	const scrolled = window.pageYOffset;
	const parallax = document.querySelector('.splash-screen');
	const speed = scrolled * 0.5;
	if (parallax) {
		parallax.style.transform = `translateY(${speed}px)`;
	}
});
